<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="red.mlz.module.module.novel.mapper.NovelMapper">

    <insert id="insert"
            parameterType="red.mlz.module.module.novel.entity.Novel"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into novel (
        <if test="novel.title != null and novel.title != '' ">title,</if>
        <if test="novel.imagesUrl != null and novel.imagesUrl != '' ">images_url,</if>
        <if test="novel.author != null and novel.author != '' ">author,</if>
        <if test="novel.score != null">score,</if>
        <if test="novel.wordCount != null">word_count,</if>
        <if test="novel.synopsis != null and novel.synopsis != '' ">synopsis,</if>
        <if test="novel.kindsId != null">kinds_id,</if>
        <if test="novel.info !=null">info,</if>
        <if test="novel.createTime != null">create_time,</if>
        <if test="novel.updateTime != null">update_time,</if>
        is_deleted)
        value (
        <if test="novel.title != null and novel.title != '' "> #{novel.title},</if>
        <if test="novel.imagesUrl != null and novel.imagesUrl != '' ">#{novel.imagesUrl},</if>
        <if test="novel.author != null and novel.author != '' "> #{novel.author},</if>
        <if test="novel.score != null">#{novel.score},</if>
        <if test="novel.wordCount != null">#{novel.wordCount},</if>
        <if test="novel.synopsis != null and novel.synopsis != '' ">#{novel.synopsis},</if>
        <if test="novel.kindsId != null">#{novel.kindsId},</if>
        <if test="novel.info !=null">#{info}</if>
        <if test="novel.createTime != null">#{novel.createTime},</if>
        <if test="novel.updateTime != null">#{novel.updateTime},</if>
        #{novel.isDeleted})
    </insert>

    <select id="getPage" resultType="red.mlz.module.module.novel.entity.Novel">
        select * from novel where
        <if test="titleKeyWord != null and titleKeyWord != '' ">(title like concat('%',#{titleKeyWord},'%')
             <if test="ids != null and ids != '' ">or kinds_id in (${ids})
            </if>and
        </if>
        is_deleted = 0 order by id  limit #{start},#{pageSize}
    </select>
    <select id="getCount" resultType="int">
        select count(*) from novel where
        <if test="titleKeyWord != null and titleKeyWord != '' ">(title like concat('%',#{titleKeyWord},'%')
            <if test="ids != null and ids != '' ">or kinds_id in (${ids})
            </if>)and
        </if>
        is_deleted = 0
    </select>
    <update id="update"
            parameterType="red.mlz.module.module.novel.entity.Novel"
            useGeneratedKeys="true"
            keyProperty="id">
        update novel set id = #{novel.id},
                         <if test="novel.title != null and novel.title != '' ">title = #{novel.title}</if>
                         <if test="novel.imagesUrl != null and novel.imagesUrl != '' ">,images_url = #{novel.imagesUrl}</if>
                         <if test="novel.author != null and novel.author != '' ">,author = #{novel.author}</if>
                         <if test="novel.score != null">,score = #{novel.score}</if>
                         <if test="novel.wordCount != null">,word_count = #{novel.wordCount}</if>
                         <if test="novel.synopsis != null and novel.synopsis != '' ">,synopsis = #{novel.synopsis}</if>
                         <if test="novel.info !=null">,info = #{info}</if>
                         <if test="novel.updateTime != null">,update_time = #{novel.updateTime}</if>
        where id = #{novel.id}
    </update>

</mapper>